/* 
In this project, I worked with a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

Referencing this database, I came up with 15 analytical based questions to solve using SQL in the SQLite Studio program.
*/
 
-- #1 Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'USA';


-- #2 Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country = 'Brazil';


-- #3 Find the Invoices of customers who are from Brazil. 
SELECT cust.FirstName, 
cust.LastName, 
inv.InvoiceId, 
inv.InvoiceDate, 
inv.BillingCountry 
FROM chinook.invoices inv
LEFT JOIN chinook.customers cust
ON inv.CustomerId = cust.CustomerId
WHERE inv.BillingCountry = 'Brazil';

-- #4 Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

-- #5 Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry 
FROM chinook.invoices;


-- #6 Provide a query that shows the invoices associated with each sales agent.
SELECT emp.FirstName, emp.LastName, inv.InvoiceId
FROM chinook.employees emp
JOIN chinook.customers cust ON  cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv ON inv.CustomerId = cust.CustomerId;

-- #7 Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT emp.FirstName AS Rep_First_Name, 
emp.LastName AS Rep_Last_Name, 
cust.FirstName AS Cust_First_Name, 
cust.LastName AS Cust_Last_Name, 
inv.total,
cust.Country AS Country
FROM chinook.employees emp
JOIN chinook.Customers cust ON cust.CustomerId = emp.EmployeeId
JOIN chinook.invoices inv ON cust.CustomerId = inv.InvoiceId;

-- #8 How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate like '2009%';

-- OR
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


-- #9 What are the total sales for 2009?
SELECT SUM(Total) 
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';


-- #10 Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, i.InvoiceLineId
FROM chinook.invoice_items i
JOIN chinook.tracks t
ON i.TrackId = t.TrackId;


-- #11 Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT t.Name as Track, ar.name as Artist, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;


-- #12 Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS 'Track', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre Type'
FROM chinook.albums a
RIGHT JOIN chinook.tracks t ON a.AlbumId = t.AlbumId
LEFT JOIN chinook.media_types m ON t.MediaTypeId = m.MediaTypeId
INNER JOIN chinook.genres g ON t.GenreId = g.GenreId;


-- #13 Show the total sales made by each sales agent.
SELECT emp.FirstName, emp.LastName, 
ROUND(SUM(inv.Total), 2) AS 'Total Sales' 
FROM chinook.employees emp

JOIN chinook.customers cust 
ON cust.SupportRepId = emp.EmployeeId 

JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent'
GROUP BY emp.FirstName;


-- #14 Which sales agent made the most dollars in sales in 2009?
SELECT emp.FirstName, emp.LastName, 
ROUND(SUM(inv.Total), 2) AS 'Total Sales'
FROM chinook.employees emp

JOIN chinook.customers cust 
ON emp.EmployeeId = cust.SupportRepId

JOIN chinook.invoices inv 
ON inv.customerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent'
AND inv.InvoiceDate LIKE '2009%'
GROUP BY emp.Firstname
ORDER BY (ROUND(SUM(inv.Total), 2)) DESC LIMIT 1;


-- #15 Which customers bought songs from the playlist called 'Grunge'? Include the song names inside the playlist.

SELECT * FROM chinook.playlists;

SELECT * FROM chinook.playlist_track
GROUP BY PlaylistId;

SELECT cust.FirstName, cust.LastName, t.Name AS 'Track Name', play.Name AS 'Playlist Name'
FROM chinook.customers cust

JOIN chinook.invoices inv ON cust.CustomerId = inv.CustomerId

JOIN chinook.invoice_items item ON inv.InvoiceId = item.InvoiceId

JOIN chinook.tracks t ON item.TrackId = t.TrackId

JOIN chinook.playlist_track pt ON t.TrackId = pt.TrackId

JOIN chinook.playlists play ON pt.PlaylistId = play.PlaylistId

WHERE play.Name = 'Grunge';
